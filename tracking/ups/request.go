package ups

import (
	"context"
	"encoding/base64"
	"encoding/json"
	"fmt"
	"gitlab.com/autonomous-ecm/backend/go-autonomous/pkg/logger"
	"io/ioutil"
	"net/http"
	"strings"
)

func getShipmentResponse(context context.Context, trackingCode string) *shipmentResponse {
	upsApiCustomHeader := map[string]string{
		"X-XSRF-TOKEN":  "CfDJ8Jcj9GhlwkdBikuRYzfhrpKqeackIddZ2ldsWXdeHj2Go9q_-7NS2lEw_3H0CiZLOm-4t_FtiJ9QMaNDSY9PT8uslaFBiJQagruksGBRTTkYplMHc6TxZIVdQAhn3IYxvCh3mdjaNXuw521f7xMKobg",
		"base64_Cookie": "X2ZicD1mYi4xLjE2MDA4NTA0NDI0MDMuMTczMTE1NDk4MTsgX2djbF9hdT0xLjEuMTk2MjU4NzcxMi4xNjAwODUwNDQzOyBhYW1fdXVpZD01ODg2NzQyNzA1MjEyMzc2Njc5MTgyODAzMjc1NjM5NTM5MzAwMzsgQU1DVlNfMDM2Nzg0QkQ1N0E4QkIyNzdGMDAwMTAxJTQwQWRvYmVPcmc9MTsgYXRfY2hlY2s9dHJ1ZTsgYm1fc3o9MjQ2QTA3Mzc0RDg0QjJDNDE0OUE3MEE2NTc2RUVGMDN+WUFBUWRub1p1Snkxd1lKMEFRQUErUW9mdWduWjFab0Z2ZytCK1Voa0gwS0tJYWNrUnFjOUpFWTNMRjNVbnROV3E3WmRYTVRLNjh3eVByRFcwYlc3R1BGdEJocmxXaUxjYkN1VFVSbXRkbnU5bTVocXQ5NzA0Z3FtZFBmbHpnUllnQnYrQTlRRkpTOFJDNHRBQTI3QitxRUVORHFWbWowSEE1U0lKRXRQN3Uyc041WEZ1Q3AvU0R3TXRJbUk7IHNfY2M9dHJ1ZTsgc3RfY3VyX3BhZ2U9c3RfdHJhY2tkZXRhaWxzOyBYLUNTUkYtVE9LRU49Q2ZESjhKY2o5R2hsd2tkQmlrdVJZemZocnBMODU4QVRuSFljeGlDTUItc3dMbnpqamowMTJFTzB0cmJVUTJBOHZ1NV9RaDNQZDBkcnExV3o1NW83b29sNEFkMnMwR0xzUWQ5OWE3dmNScVNDYVJyTl9rNmxhekJxckFuZ1ZSQVNJWDk2aHRIamtQV2ppaVA2c0wwdlFqZmh5b2M7IHVwc19sYW5ndWFnZV9wcmVmZXJlbmNlPWVuX1VTOyBVWl9USV9kY192YWx1ZT0wOyBYLVhTUkYtVE9LRU4tU1Q9Q2ZESjhKY2o5R2hsd2tkQmlrdVJZemZocnBLcWVhY2tJZGRaMmxkc1dYZGVIajJHbzlxXy03TlMybEV3XzNIMENpWkxPbS00dF9GdGlKOVFNYU5EU1k5UFQ4dXNsYUZCaUpRYWdydWtzR0JSVFRrWXBsTUhjNlR4WklWZFFBaG4zSVl4dkNoM21kamFOWHV3NTIxZjd4TUtvYmc7IC5Bc3BOZXRDb3JlLkFudGlmb3JnZXJ5LnBLRkJDclBBT21BPUNmREo4SDFTQ0hvOG9PNUFzY2NlMUo0MmQyQlYwMUlzeFJ4aDNyTGtxVFFEQzV2b1NjcU9Pc3RVNjYwRjlfWjV5aVBjQTZxTC1pUjNsdzhRcl9xZjZiblNyTkt0SHExNktzNDJoMzd4M3dLZjN1Wm12UUtrcVhLQU90emdlM2F6SlUwOU9WUTBRLWVTeDlRVkNuZDduYU84TGcwOyBnaWdfYm9vdHN0cmFwXzNfaUNWU0U5QW82eTlISVR6WENERU44NVlraEFuWWJBdVcxYTZMT1VuUktQRWN3VV9RQ2pGejdxX2ExcWZONVZnZD1fZ2lneWFfdmVyMzsgSEFTU0VFTk5PVElDRT1UUlVFOyBjb20udXBzLmltcy5sYXNzby5zRGF0YUp1bDE3PUViYTZnTDNnTUdGTzNyaEMyeW00NmdkYUVYdEdvZl9Dd1AwSHZFY3NhaG1IV3hTT2tEaUJcdTAwMjExODQ2NDI4MzAwXHUwMDIxLTE3Mjc4NjAyMThcdTAwMjEyMTUxNFx1MDAyMS0xOyBfYWJjaz1ENUQ5NjJEQjM3MTUxNTIwOTg1MzZBQjA5NTQ2NTdGNH4wfllBQVFEbm9adUZyeVFMQjBBUUFBNWh1QnVnU2JnV3NsSWNDazJtMWc1NmpHQXdsSmt2S0VYcWFrM3N0ZnBZZVZsemxqTWt1OXR0R1BrSktLOCtPNWtOV1lwNkF2TTI1bFp4cEVxZDgxZjRCNkMvV290Yjlibldib1BxL1d5cWN4Mm5hSHpPUE42SWFHMWovTWVMd25CWFZEOElFQWpKREo5SXdwNlBsR3BkSU1GL1lCUyszVlBDT0s0b1kwditTdXdWUFQrNkxqQUNqR3lXUGk1eWt1ZVZ4ZURSS0hjMzlYTUx6MlBuc3dGblk5RFBBMVdCQ2h0WWxCK0E4TXpzVDhrMGI4bnBzaWpYRjhzTWE0QUlBck5MM0x3WVErVlZKOXNpMHdtLzI5VmdySEJKS1d2eTBRYk5VbXhPM2d6SWRDb2I3OTBBPT1+LTF+MS14WUxiTE13eUtMLTEwMDAwLTEwLTEwMDAtMXx8LTF8fH4tMTsgRE9BLVhTUkYtVE9LRU49Q2ZESjhIMVNDSG84b081QXNjY2UxSjQyZDJCbGRLQ0l1S194X0VVRkhhUUV5X29ZbUw1OHJPeEJQOTVhVkFaeVZaMm56OWZYclBGZXgwdVY4NWhjc3dGbVNFTG1xN1VuMzgzMmp4UnFRT3ZiUzd0ZkFvTXMxdjlnU1ZyOEh6N2ZTUnBWNkV2R0V4N2ZjMWRBSHJDXzhrSkhzclU7IHVwc19yZW1lbWJlcl9tZT18cnV8cGN8cXZtdXxxdm1hfDsgYWFtX2Ntcz1zZWdtZW50cyUzRDk2MjYzOTElN0M5NjI2NDg3JTdDOTYyNTg3MiU3Qzk2MjU2ODclN0M5NjI2NTY4JTdDOTYyNjU5OSU3Qzk2MjY4MjglN0MxNTAyNTY0MSU3Qzk2MjUzMDI7IF9ta3RvX3Ryaz1pZDo5MzUtS0tFLTI0MCZ0b2tlbjpfbWNoLXVwcy5jb20tMTYwMDg1Njk3NzcxMy04OTI0MDsgc2Vzc2lvbl91cHNfY29tPTE2MDA4NTgyNTUmU0FRQ3djdWVhNVMxaW15VVBRenQ4djVEckdQYkRQVWFFb2dZWnJ6SS1XVT0mOjBaY0F4em9sUWJmdklGbW9GTzJScFNYTFJrREFhZFZQRF9tZzVYQkl2d2liRmdHckRuZEtkNXpiOXhBamtUX19oekVnVzU3WnhWX2htR2pnOW1vOEphbUUwVDR6MnNEOXF5MkxiQWRBNDZ3PSY6WVJzdjB3bFlaa2ZVWWxuRXhacml6aWVoN2xUZC16RURCM0QyNUw4UWpJdG1xMDZ1ekRtRklzbVZCMkcxSzlCMzsgYWtfYm1zYz04MTA4N0MxMkIzRDU5MEY0NEUzNUJEOEUxRTQwNUQ5OEI4MTk3QTc2QzY1NzAwMDA4RjI4NkI1RkU1N0M1RjUxfnBsYTlYZ2ZQUEU5cmU1SUhpcWtxbUJwejBPSzFBaTVUT2V3NitzeStiNHgvcnF5WTdmb1ZSM0FZWVA4bEd1ZXB3L3kwYnYwR0paeVg2Rkh5TThVVWdxRGpsejJ4VkxCeVNiVFY1c3VRSUFVYmIveDdxOU1md2lGUW9vS1FYSmdYbW00V0h0ZXJjSnFPNkcyMjc1UWFsNDdXWDFhMGppSWgwNjM5WktzbmlaazY4VmRxcjZNMHpuRWQ3eEgrclRNcnpmQzFyRW1rYXB4NXI4MlZCWUNQTFRBOUE1WVFkSGVaQVB6UWY4dTUxdEpOYz07IENUQ1Nlc3Npb25EYXRhVjU9MmEwYjY4YmZjMDQ2NGI3Yjg0N2RiNjhmMjAzMDk0MjU6SnQyTVAzSlVCZ3JsQU5EUjhKamFNYVdYbFhqekZHeGJpUXBxbkFkVzl5MD07IHNoYXJlZHNlc3Npb249YTlmN2I3YTAtNWU4Zi00N2RlLWE5MmUtMzU4MWFjZjdlNzU4Onc7IEFNQ1ZfMDM2Nzg0QkQ1N0E4QkIyNzdGMDAwMTAxJTQwQWRvYmVPcmc9LTQwODYwNDU3MSU3Q01DSURUUyU3QzE4NTI5JTdDTUNNSUQlN0M1ODQzMTM0NDQzMjA3NzQ5NTM5MTg3MTY0MjA0OTE5MjE3MTA1NSU3Q01DQUFNTEgtMTYwMTQ2MzEyMyU3QzMlN0NNQ0FBTUItMTYwMTQ2MzEyMyU3Q1JLaHBSejhrcmcydExPNnBndVhXcDVvbGtBY1VuaVFZUEhhTVdXZ2RKM3h6UFdRbWRqMHklN0NNQ09QVE9VVC0xNjAwODY1NTIzcyU3Q05PTkUlN0NNQ0NJREglN0MzNjMwMjY0NzAlN0N2VmVyc2lvbiU3QzQuNi4wOyBDT05TRU5UTUdSPWNvbnNlbnQ6dHJ1ZSU3Q3RzOjE2MDA4NTgzNTg0NDQ7IEpTRVNTSU9OSUQ9RUI5MkE0Q0VBNzVENTZFNTg0RUUzN0EyQkM3Q0Y0MDg7IG1ib3g9UEMjOTNmYzI1YjEzMzM0NDNlZDljNjMwOTBjMDVkNWFmYTMuMzhfMCMxNjY0MTAzMTk0fHNlc3Npb24jOTU5YjhjZDRjNGVjNDdmMDhkMzAwMDBkMzIzNWExYjMjMTYwMDg1ODU5MTsgdXRhZ19tYWluPXZfaWQ6MDE3NGJhMjEzZmU5MDAyOTdhOTQ5MjFhMTJkODAzMDc5MDA1OTA3MTAwYmQwJF9zbjoyJF9zZTo0NiRfc3M6MCRfc3Q6MTYwMDg2MDE5NDQ2OCR2YXBpX2RvbWFpbjp1cHMuY29tJHNlc19pZDoxNjAwODUzODUzOTcxJTNCZXhwLXNlc3Npb24kX3BuOjIzJTNCZXhwLXNlc3Npb247IF80Y189alpSTlQlMkJNd0VJYiUyRml3JTJCY1NEUCUyQnRpdWhGZXh5MkpWWXhJTDJXam0yQXhGcEU4VXBMRUw5N3p0cG0zNVFEdVFTeFg1bTVuMDlFNyUyQlQxNmU0SUZPcUFJd0NJVFZvZFU2ZTQxc2kwM2RTRnQzd2VpRlQ4a2JPeWI4MUtMZ0ZvU1VUWm5WT3VuNEw5TjB5ZmlTVVJPS3hLMGRtWFVVYWJwVTE3Rk00cFIwcnJiYUdXbWFVRkI5WVR0VlEybyUyRmFodG9mNVhFR0ExT0ZFV0lpU0NXZHlEVHdtQW5uVkdacG9US21QTXJpekFhdWo1TVlUZWtneXJmYkhPJTJGazl1Ymh6JTJCenElMkJ2TDc3VzlNJTJCZFQzYlpybWVackh2cXQ4bWl6Yk5QSE5QQyUyRnlsSEw4YUxzbTVCVHlYJTJGY1ptekNZUUo2MHNaeHJTWlZoUnRwdmwzZFhGJTJGUnNYb1VMYVFTblhBaUJ5clVXVm5KTFVZRVNESVRGYzZDYWdwUm5sM2ZYRnhSMWRyR3QzZHRzOEVmbTNycmdPWG8yUVZobGJJalJleWFGeEV5TU1zUlRUS2xxRmh0Y1JCcWwxajRvTFVUa1JwYXlCQXZlZzJIZUtzUWZvcXVyNVh4Mkg5UHM1dyUyQk0yYlFPVVc0MVBRRCUyQlZxbnFtMjREQWRXaWNJenlNbG9BWnJXekFvVTd5b0lCRGhvWHBRWDBBVVVBVEZJMzN0VVJBM0VFTVdWWFBUN0c3aWIyVDgwZzg2WlpwbmhibHJnVmNFUkppS1ZiMXYzd2lVTkNmTzNRa2c4eFBmZE5TMVpqNjhBS29hMW1GcWVtNzJzeU5VckE4Q0F4MzQlMkZERjg1c2s4OG9KcFRDbG5GTTBOYmplTzdLR2NWQmNRTnNXNDZLWGJuMlphVE5nVHJzTXVYY25Lb3J1dVkxeFgyUU9naGlJT21ubHNxaUdDMGxzZyUyRmdhQU9ubXA4R3ZGUWpMM1hCbUZROFl5S0dEQ2VoeEQlMkJpOUpreXpubHZ1T0FSeUlGUG9QampzakVsTmNlNm15SnpoVnVFWnJGM2NPTGFudXJCdG01eCUyQkJLJTJCR09YdjUyRnNGR2VhQzcyJTJCbDNZbTNmRyUyQlFndERJN3ZYJTJGWjIwM3RCWVRoJTJCaDY1V2hpJTJGdWgwZDZDMVRwa3FwQjRZcUVvTXVPVXliUXJqTUFkV2hwemVHS0NTb21YMGRhRlpoc1RxOVYlMkY7IHNfdm51bT0xNjAxNDg1MjAwNzY0JTI2dm4lM0QzOyBzX2ludmlzaXQ9dHJ1ZTsgZGF5c3NpbmNldmlzaXRfcz1MZXNzJTIwdGhhbiUyMDElMjBkYXk7IHNfbnI9MTYwMDg2MDQ2NDQxNy1SZXBlYXQ7IGRheXNzaW5jZXZpc2l0PTE2MDA4NjA0NjQ0MjA7IFJUPSJkbT11cHMuY29tJnNpPWEyOWU2YzA1LTVmM2UtNGQwYi1iZTA5LTMwN2RmY2JkODhmMyZzcz0xNjAwODU4MzkzNzI1JnNsPTAmdHQ9MCZvYm89MCZzaD0xNjAwODU4Mzk4ODcxJTNEOSUzQTAlM0E0MTk5MSUyQzE2MDA4NTgzOTAxMjglM0Q4JTNBMCUzQTM2OTEwJTJDMTYwMDg1ODM4NDM5MiUzRDclM0EwJTNBMzIyMjUlMkMxNjAwODU4Mzc1MzA0JTNENiUzQTAlM0EyNzM0MSUyQzE2MDA4NTgzNjE4OTUlM0Q1JTNBMCUzQTIyMTI5JmJjbj0lMkYlMkY2ODRkMGQ0MC5ha3N0YXQuaW8lMkYi",
	}
	urlUPS := "https://www.ups.com/track/api/Track/GetStatus?loc=en_US"
	body := fmt.Sprintf(`{"Locale":"en_US","TrackingNumber":["%s"]}`, trackingCode)

	req, err := http.NewRequest(
		"POST",
		urlUPS,
		strings.NewReader(body),
	)

	result := &shipmentResponse{}
	cookieValue, err := base64.StdEncoding.DecodeString(upsApiCustomHeader["base64_Cookie"])
	if err != nil {
		logger.AtLog.Warn(err)
		return result
	}

	req.Header.Add("X-XSRF-TOKEN", upsApiCustomHeader["X-XSRF-TOKEN"])
	req.Header.Add("Cookie", string(cookieValue))
	req.Header.Add("Content-Type", "application/json")

	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		logger.AtLog.Warn(err)
		return result
	}

	defer resp.Body.Close()
	data, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		logger.AtLog.Warn(err)
		return result
	}

	err = json.Unmarshal(data, result)
	if err != nil {
		logger.AtLog.Warn(err)
	}

	return result
}
